#include <SPI.h>

//Atmega pin in B group
#define ADCselect 0

int ADCvalue(char channel, char PBpin){
//  digitalWrite(PBpin, LOW);
  PORTB &= ~byte(1 << PBpin);

  //---Transfer---
  //Start byte
  SPI.transfer(0b0000001);
  
  //Channel selector byte
  byte dataP1 = SPI.transfer(byte((1 << 7) | (channel << 4)));
  
  //Don't care byte for retriving rest of data
  byte dataP2 = SPI.transfer(0b00000000);
  //------

//  digitalWrite(PBpin, HIGH);
  PORTB |= byte(1 << PBpin);

  //---Data proccesing---
  dataP1 &= 0b00000011;

  return (dataP1 << 8) | dataP2;
  //------
}

void setup(){
  //Onboard LED
  pinMode(LED_BUILTIN, OUTPUT);
  
  //---ADC CS pin---
  pinMode(ADCselect, OUTPUT);
  digitalWrite(ADCselect, HIGH);
  //------

  //---SPI configuration---
  SPI.begin();

  SPI.setBitOrder(MSBFIRST);
  SPI.setDataMode(SPI_MODE0);
  SPI.setClockDivider(SPI_CLOCK_DIV8);
  //------

  //Console
  Serial.begin(115200);

  //---Testing---
  double execTime = 0;
  size_t N = 10000;

  for(size_t k = 0; k < N; k++){
    unsigned long startTime = micros();
    
    ADCvalue(0, ADCselect);

    unsigned long endTime = micros();

    execTime += double((endTime - startTime)) / double(N);
  }

  Serial.println(execTime);
  //------
}

void loop(){
//  Serial.println(ADCvalue(0, ADCselect));
}